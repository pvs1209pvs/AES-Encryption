Plain text is read in block of 128. Encryption is carried on the block of text individually.

Blocks of plain texts are passed to the thread that is ready to execute and the results the saved in-place. Encrypted text message is achieved once all the blocks of texts are encrypted.

Data-Parallelism was utilised becasuse the same AES encryption algorithm was used for all the blocks of text.

Parallel execution was embarringly parallel because no coordination was required amongst threads.

Default scheduling provided the best results.

Problem was faced when deciding how to parallelise the program and making sure the results were saved in-place.
Solution to the problem was found by dividing the load equally amongst each thread.

There was output dependency between the sub-steps of encryption.
There was an idea to parallelize sub-steps, but the size of the sub-steps was very small. Overhead of managing the threads overweighed the performace gains, so the ideas was dropped.



OpenMP was used for parallelising the code.

-x-

Parallelism took place
